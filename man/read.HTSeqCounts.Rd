\name{read.HTSeqCounts}
     \alias{read.HTSeqCounts}
     \title{Read counts output from HTSeq script.}
     \description{
       This function reads the output files from HTSeq python script \code{X.py}, it provides an ExonCountSet object.
     }
     \usage{
     read.HTSeqCounts(countfiles, design, aggregatefile=NULL)
     }
     \arguments{
       \item{countfiles}{A string vector containing the output files with the paths from \code{aggregate_genes.py} to read.}
       \item{design}{A vector of strings or factors with the conditions foreach countfile.}
       \item{aggregatefile}{An aggregatefile generated by \code{count.py} necessary for the visualization of the data but not obligatory to test for alternative exon usage.}
     }
     \value{
	An ExonCount object.
     }
     \examples{
	library(DEXSeq)

        inDir = system.file("extdata", package="pasilla", mustWork=TRUE)
        annotationfile = file.path(inDir, "Dmel.BDGP5.25.62.DEXSeq.chr.gff")
        samples = data.frame(
           condition = c("treated", "treated", "treated", "untreated", "untreated", "untreated", "untreated"),
           replicate = c(1:3, 1:4),
           type = c("single-read", "paired-end", "paired-end", "single-read", "single-read", "paired-end", "paired-end"),
           row.names = dir(system.file("extdata", package="pasilla", mustWork=TRUE), pattern="fb.txt"),
           stringsAsFactors = FALSE,
           check.names = FALSE)

        annotationfile = file.path(inDir, "Dmel.BDGP5.25.62.DEXSeq.chr.gff")

        \dontrun{ecs = read.HTSeqCounts(countfiles = file.path(inDir, rownames(samples)), 
           design = samples, 
           aggregatefile = annotationfile)}
	}
\keyword{ExonCountSet}
